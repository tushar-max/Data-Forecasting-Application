{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusharawasthi\\\\Desktop\\\\Training\\\\Ronnie Assignment\\\\NGT-3 Team 6-Bit\\\\NGT-3\\\\ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// function App() {\n//   const [data,setData] = useState([]);\n//   const [pivotTable,setPivotTable] = useState([]);\n//   const [updateParams,setUpdateParams] = useState({\n//     i:-1,\n//     j:-1,\n//     val:0,\n//   });\n//   useEffect(()=>{\n//     fetchData();\n//   },[]);\n\n//   const fetchData = async ()=>{\n//     try{\n//       const response = await axios.get('http://127.0.0.1:8080');\n//       setPivotTable(response);\n//     }\n//     catch(error){\n//       console.log(error);\n//     }\n//   };\n\n//   const handleUpdateData = async () => {\n//     try {\n//       await axios.post('http://127.0.0.1:8080/updateData', updateParams);\n//       // Refresh data after updating\n//       fetchData();\n//       // Reset updateParams to default values\n//       setUpdateParams({ i: 0, j: 0, val: 0 });\n//     } catch (error) {\n//       console.error('Error updating data:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Forecasting Frontend</h1>\n//       <div>\n//         <h2>Pivot Table</h2>\n//         <pre>{JSON.stringify(pivotTable, null, 2)}</pre>\n//       </div>\n//       <div>\n//         <h2>Update Data</h2>\n//         <label>\n//           i:\n//           <input type=\"number\" value={updateParams.i} onChange={(e) => setUpdateParams({ ...updateParams, i: parseInt(e.target.value) })} />\n//         </label>\n//         <label>\n//           j:\n//           <input type=\"number\" value={updateParams.j} onChange={(e) => setUpdateParams({ ...updateParams, j: parseInt(e.target.value) })} />\n//         </label>\n//         <label>\n//           val:\n//           <input type=\"number\" value={updateParams.val} onChange={(e) => setUpdateParams({ ...updateParams, val: parseInt(e.target.value) })} />\n//         </label>\n//         <button onClick={handleUpdateData}>Update Data</button>\n//       </div>\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pivotTable, setPivotTable] = useState([]);\n  const [updateParams, setUpdateParams] = useState({\n    columns: [],\n    data: [],\n    index: [],\n    i: -1,\n    j: -1,\n    val: 0\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8080');\n      setPivotTable(response.data);\n      setUpdateParams({\n        ...updateParams,\n        columns: response.data.columns,\n        data: response.data.data,\n        index: response.data.index\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleUpdateData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:8080/updateData', updateParams);\n      // Refresh data after updating\n      fetchData();\n      // Reset updateParams to default values\n      setUpdateParams({\n        columns: [],\n        data: [],\n        index: [],\n        i: -1,\n        j: -1,\n        val: 0\n      });\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forecasting App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pivot Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age-Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), updateParams.columns.map((year, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: year\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: updateParams.index.map((rowData, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [rowData.map((value, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this)), updateParams.data[rowIndex].map((cellValue, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cellValue\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this))]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"i:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: updateParams.i,\n          onChange: e => setUpdateParams({\n            ...updateParams,\n            i: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"j:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: updateParams.j,\n          onChange: e => setUpdateParams({\n            ...updateParams,\n            j: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"val:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: updateParams.val,\n          onChange: e => setUpdateParams({\n            ...updateParams,\n            val: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateData,\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jUHnGuZkVzoutMh6nvhKLTsVjxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","pivotTable","setPivotTable","updateParams","setUpdateParams","columns","data","index","i","j","val","fetchData","response","get","error","console","log","handleUpdateData","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","year","rowData","rowIndex","value","colIndex","cellValue","type","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tusharawasthi/Desktop/Training/Ronnie Assignment/NGT-3 Team 6-Bit/NGT-3/ui/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState,useEffect} from 'react';\nimport axios from 'axios';\n\n// function App() {\n//   const [data,setData] = useState([]);\n//   const [pivotTable,setPivotTable] = useState([]);\n//   const [updateParams,setUpdateParams] = useState({\n//     i:-1,\n//     j:-1,\n//     val:0,\n//   });\n//   useEffect(()=>{\n//     fetchData();\n//   },[]);\n\n//   const fetchData = async ()=>{\n//     try{\n//       const response = await axios.get('http://127.0.0.1:8080');\n//       setPivotTable(response);\n//     }\n//     catch(error){\n//       console.log(error);\n//     }\n//   };\n\n//   const handleUpdateData = async () => {\n//     try {\n//       await axios.post('http://127.0.0.1:8080/updateData', updateParams);\n//       // Refresh data after updating\n//       fetchData();\n//       // Reset updateParams to default values\n//       setUpdateParams({ i: 0, j: 0, val: 0 });\n//     } catch (error) {\n//       console.error('Error updating data:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Forecasting Frontend</h1>\n//       <div>\n//         <h2>Pivot Table</h2>\n//         <pre>{JSON.stringify(pivotTable, null, 2)}</pre>\n//       </div>\n//       <div>\n//         <h2>Update Data</h2>\n//         <label>\n//           i:\n//           <input type=\"number\" value={updateParams.i} onChange={(e) => setUpdateParams({ ...updateParams, i: parseInt(e.target.value) })} />\n//         </label>\n//         <label>\n//           j:\n//           <input type=\"number\" value={updateParams.j} onChange={(e) => setUpdateParams({ ...updateParams, j: parseInt(e.target.value) })} />\n//         </label>\n//         <label>\n//           val:\n//           <input type=\"number\" value={updateParams.val} onChange={(e) => setUpdateParams({ ...updateParams, val: parseInt(e.target.value) })} />\n//         </label>\n//         <button onClick={handleUpdateData}>Update Data</button>\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction App() {\n  const [pivotTable, setPivotTable] = useState([]);\n  const [updateParams, setUpdateParams] = useState({\n    columns: [],\n    data: [],\n    index: [],\n    i: -1,\n    j: -1,\n    val: 0,\n  });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8080');\n      setPivotTable(response.data);\n      setUpdateParams({\n        ...updateParams,\n        columns: response.data.columns,\n        data: response.data.data,\n        index: response.data.index,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleUpdateData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:8080/updateData', updateParams);\n      // Refresh data after updating\n      fetchData();\n      // Reset updateParams to default values\n      setUpdateParams({ columns: [], data: [], index: [], i: -1, j: -1, val: 0 });\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Forecasting App</h1>\n\n      <div>\n        <h2>Pivot Table</h2>\n        {/* <pre>{JSON.stringify(updateParams.columns, null, 2)}</pre> */}\n        {/* <pre>{JSON.stringify(pivotTable.data, null, 2)}</pre> */}\n        {/* <pre>{JSON.stringify(updateParams.index, null, 2)}</pre> */}\n        <table>\n          <thead>\n            <tr>\n              <th>Country</th>\n              <th>Gender</th>\n              <th>Age-Group</th>\n              {updateParams.columns.map((year, index) => (\n                <th key={index}>{year}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {updateParams.index.map((rowData, rowIndex) => (\n              <tr key={rowIndex}>\n                {rowData.map((value, colIndex) => (\n                  <td key={colIndex}>{value}</td>\n                ))}\n                {updateParams.data[rowIndex].map((cellValue, colIndex) => (\n                  <td key={colIndex}>{cellValue}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <h2>Update Data</h2>\n        <label>\n          i:\n          <input\n            type=\"number\"\n            value={updateParams.i}\n            onChange={(e) => setUpdateParams({ ...updateParams, i: parseInt(e.target.value) })}\n          />\n        </label>\n        <label>\n          j:\n          <input\n            type=\"number\"\n            value={updateParams.j}\n            onChange={(e) => setUpdateParams({ ...updateParams, j: parseInt(e.target.value) })}\n          />\n        </label>\n        <label>\n          val:\n          <input\n            type=\"number\"\n            value={updateParams.val}\n            onChange={(e) => setUpdateParams({ ...updateParams, val: parseInt(e.target.value) })}\n          />\n        </label>\n        <button onClick={handleUpdateData}>Update Data</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}